import java_cup.runtime.*;
import java.util.Scanner;

parser code {:
  private Scanner sc = new Scanner(System.in);
  private int contador = 0;
  private double somatorio = 0.0;
  public double getDouble(){
    return this.sc.nextDouble();
  }
  public void update(Object value){
    if (value == null){ 
      return;
    }
    this.contador++;
    this.somatorio += Double.parseDouble(value.toString());
  }
  public void imprimeRelatorio(){
    System.out.println("Foram reconhecidas e computadas:");
    System.out.println(this.contador + " expressões");
    System.out.println("Cujo somatório foi: " + this.somatorio);
  }
:}

/* TERMINAIS */
terminal PTVIRG, MAIS, MENOS, DIV, MULT, MOD, PTO, IDENT;
terminal ABRE_PARENT, FECHA_PARENT, ABRE_COLCH, FECHA_COLCH, KW_IF;
terminal Double NUMBER;

/* NÃO TERMINAIS */
non terminal expr_list, expr_ptv;
non terminal Double expr, term, factor, designator;


expr_list ::= expr_list expr_ptv:e {:
    parser.update(e);
  :} | expr_ptv:e {:
    parser.update(e);
  :};

expr_ptv ::= expr:e {: System.out.println("= " + e); RESULT = e; :} PTVIRG;

expr ::= expr:e MAIS term:t {:
    RESULT = e + t; 
  :} | expr:e MENOS term:t {:
    RESULT = e - t;
  :} | MENOS term:t {:
    RESULT = -t;
  :} | term:t {:
    RESULT = new Double(t.doubleValue());
  :};

term ::= factor:f MULT term:t {: 
    RESULT = f * t;  
  :} | factor:f DIV term:t {:
    double denominador = t.doubleValue();
    while(denominador == 0.0){
      System.out.println("O denominador não pode ser zero");
      System.out.println("Informe o denominador:");
      denominador = parser.getDouble();
    }
    RESULT = f / denominador;  
  :} | factor:f {:
    RESULT = new Double(f.doubleValue());
  :};

factor ::= NUMBER:n {: 
    RESULT = new Double(n.doubleValue());
  :} | ABRE_PARENT expr:e FECHA_PARENT {:
    RESULT = new Double(e.doubleValue());
  :} | designator:d {:
    RESULT = new Double(d.doubleValue());
  :};

designator ::= designator ABRE_COLCH expr:e FECHA_COLCH {:
    if(e < 0){
      System.out.println("O índice do vetor não negativo");
      double indice = -1;
      
      do{
        System.out.print("Digite um índice válido: ");
        indice = parser.getDouble();
        System.out.println();
      }while(indice < 0);
      RESULT = new Double(indice);
    }else{
      RESULT = new Double(e);
    }
  :} | designator:e PTO IDENT {:
    RESULT = new Double(e.doubleValue());
  :} | IDENT:id {:
    RESULT = new Double(1.0);
  :};